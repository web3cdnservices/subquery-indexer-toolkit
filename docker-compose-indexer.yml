version: "3"

x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

networks:
  indexer_services:
    name: indexer_services
    external: true
  subquery_indexer:
    name: subquery_indexer
    external: true

services:


  postgres:
    image: ${POSTGRES_VERSION:-postgres:12-alpine}
    container_name: indexer_db
    restart: always
    networks:
      indexer_services:
      subquery_indexer:
        ipv4_address: ${DOCKER_SUBNET_PREFIX}.2
    expose:
      - 5432
    volumes:
      - ${POSTGRES_CUSTOM_DATA_PATH:-.data/postgres}:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
    logging: *default-logging
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  coordinator:
    image: subquerynetwork/indexer-coordinator:${COORDINATOR_VERSION}
    container_name: indexer_coordinator
    restart: always
    networks:
      indexer_services:
      subquery_indexer:
        ipv4_address: ${DOCKER_SUBNET_PREFIX}.3
    expose:
      - ${COORDINATOR_PORT:-8000}
#    ports:
#      - 127.0.0.1:${COORDINATOR_PORT:-8000}: ${COORDINATOR_PORT:-8000}/tcp
    depends_on:
      "postgres":
        condition: service_healthy
    volumes:
      - .data/subquery/.projects:/usr/projects
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --network=${NETWORK_NAME:-mainnet}
      - --postgres-host=indexer_db
      - --network-endpoint=${PRIMARY_BLOCKCHAIN_RPC}
      - --ws-endpoint=${PRIMARY_BLOCKCHAIN_RPC} #SUPPORT FOR OLD RELEASES
      - --postgres-schema=${POSTGRES_SCHEMA:-coordinator_db}
      - --postgres-password=${DB_PASS}
      - --postgres-port=5432
      - --port=${COORDINATOR_PORT:-8000}
      - --start-port=3100
      - --secret-key=${SECRET_KEY}
      - --mmrPath=${MMR_PATH:-/home}
      - --ipfs=http://indexer_ipfs:8080/api/v0/
#      - --debug=true
    environment:
      - COORDINATOR_PORT=${COORDINATOR_PORT:-8000}
    logging: *default-logging
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-i",
          "-X POST",
          "http://indexer_coordinator:${COORDINATOR_PORT:-8000}/graphql",
          "-H 'Content-Type: application/json'",
          "-d '{ \"query\": \"query { accountMetadata { network } }\" }'"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=${ENABLE_COORDINATOR_EXTERNAL:-false}"
      - "traefik.http.services.indexer-cord.loadbalancer.server.port=8000"
      - "traefik.http.routers.indexer-cord.entrypoints=websecure"
      - "traefik.http.routers.indexer-cord.tls.certresolver=myresolver"
      - "traefik.http.middlewares.myauth.basicauth.users=${REALM_AUTH_DATA}"
      - "traefik.http.routers.indexer-cord.rule=Host(`$DOMAIN_COORDINATOR`)"
      - "traefik.http.routers.indexer-cord.middlewares=myauth"

  redis:
      image: redis:${REDIS_VERSION:-7-alpine}
      container_name: indexer_cache
      restart: always
      networks:
        indexer_services:
        subquery_indexer:
          ipv4_address: ${DOCKER_SUBNET_PREFIX}.4
      expose:
        - 6379
      logging: *default-logging
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
      healthcheck:
        test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  proxy:
    image: subquerynetwork/indexer-proxy:${PROXY_VERSION}
    container_name: indexer_proxy
    restart: always
    networks:
      indexer_services:
      subquery_indexer:
        ipv4_address: ${DOCKER_SUBNET_PREFIX}.5
    expose:
      - ${INDEXER_PROXY_PORT:-8375}
    ports:
      - 7370:7370/udp
    logging: *default-logging
    depends_on:
      "coordinator":
        condition: service_healthy
    environment:
      - INDEXER_PROXY_PORT=${INDEXER_PROXY_PORT:-8375}
    command:
#      - --host=0.0.0.0
      - --port=${INDEXER_PROXY_PORT:-8375}
      - --auth
      - --network=${NETWORK_NAME:-mainnet}
      - --jwt-secret=${JWT_SECRET_TOKEN}
      - --secret-key=${SECRET_KEY}
      - --coordinator-endpoint=http://indexer_coordinator:${COORDINATOR_PORT:-8000}
      - --network-endpoint=${PRIMARY_BLOCKCHAIN_RPC}
      - --token-duration=24
      - --redis-endpoint=redis://indexer_cache
      - --metrics-token=${PROMETHEUS_METRICS_TOKEN}
    healthcheck:
      test: ["CMD-SHELL", "curl http://indexer_proxy:${INDEXER_PROXY_PORT:-8375}/healthy >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.indexer-service.loadbalancer.server.port=${INDEXER_PROXY_PORT:-8375}"
      - "traefik.http.routers.indexer-service.entrypoints=websecure"
      - "traefik.http.routers.indexer-service.tls.certresolver=myresolver"
      - "traefik.http.routers.indexer-service.rule=Host(`$DOMAIN`)"

  ipfs:
    image: ipfs/kubo:${IPFS_VERSION}
    container_name: indexer_ipfs
    environment:
      IPFS_PROFILE: server
    networks:
      indexer_services:
      subquery_indexer:
        ipv4_address: ${DOCKER_SUBNET_PREFIX}.16
    volumes:
      - .data/ipfs/export:/export
      - .data/ipfs/data:/data/ipfs
      - .data/ipfs_${NETWORK_NAME}.sh:/container-init.d/ipfs.sh
    ports:
      - 4001:4001
      - 4001:4001/udp
      - 127.0.0.1:5001:5001
      - 127.0.0.1:8080:8080
